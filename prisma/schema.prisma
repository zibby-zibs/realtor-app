// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

model User {
  id Int @id @default(autoincrement())
  name String
  phone String
  email String @unique
  password String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userType UserType
  homes Home[]
  realtorMessages Message[] @relation("realtor-messages")
  buyerMessages Message[] @relation("buyer-messages")
}

model Home {
  id       Int     @id @default(autoincrement())
  address  String
  bedrooms Int
  bathrooms Float
  city      String
  listed_date DateTime @default(now())
  price Float
  land_size Float
  property_type PropertyType
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  images Image[]
  realtor_id Int
  realtor User @relation(fields: [realtor_id], references: [id], onDelete: Cascade)
  message Message[]
}

model Image {
  id Int @id @default(autoincrement())
  url String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  home_id Int
  home Home @relation(fields: [home_id], references: [id], onDelete: Cascade)
}

model Message {
  id Int @id @default(autoincrement())
  message String
  home_id Int
  home Home @relation(fields: [home_id], references: [id], onDelete: Cascade)
  realtor_id Int
  realtor User @relation("realtor-messages", fields: [realtor_id], references: [id], onDelete: Cascade)
  buyer_id Int
  buyer User @relation("buyer-messages", fields: [buyer_id], references: [id], onDelete: Cascade)

}

enum PropertyType {
  RESIDENTIAL
  CONDO
}

enum UserType {
  BUYER
  REALTOR
  ADMIN
}